@model ProjectModel

@await Html.PartialAsync("DataTable", new DataTableModel
{
    Name = "ProjectMemberGrid",
    Title = $"{Localize("ProjectMember.Title").Text} in {Model.Name}",
    LengthChangeLabel = Localize("Grid.LengthChangeLabel").Text,
    SearchLabel = Localize("Grid.SearchLabel").Text,
    SearchPlaceholder = Localize("Grid.SearchPlaceholder").Text,
    ZeroRecordsLabel = Localize("Grid.ZeroRecords").Text,
    FooterInfoLabel = Localize("Grid.FooterInfo").Text,
    FooterInfoWhenEmptyLabel = Localize("Grid.FooterInfoWhenEmpty").Text,
    UrlRead = Url.Action("DataReadMember", new { projectId = Model.Id }),
    Sorting = false,
    AddButtonToHeader = true,
    HeaderActions = new List<ActionModel>
    {
        new ActionModel {
            Title = Localize("Button.AddNew").Text,
            Url = Url.Action("AddMember", new { projectId = Model.Id }),
            Text = Localize("Button.AddNew").Text,
            Icon = "fas fa-plus",
            HyperLinkType = HyperLinkTypeEnum.BUTTON_TEXT_ICON,
            NavigationType = NavigationTypeEnum.MODAL,
            ButtonColor = ButtonColorEnum.PRIMARY
        }
    },
    ColumnActions = new List<ActionModel>
    {
        new ActionModel {
            Title = Localize("Button.Edit").Text,
            Url = Url.Action("EditMember"),
            Text = Localize("Button.Edit").Text,
            Icon = "far fa-edit",
            ReferenceParameter = "Id",
            HyperLinkType = HyperLinkTypeEnum.HYPERLINK_TEXT_ICON,
            NavigationType = NavigationTypeEnum.MODAL,
            ButtonColor = ButtonColorEnum.PRIMARY
        },
        new ActionModel {
            Title = Localize("Button.Delete").Text,
            Url = Url.Action("DeleteMember"),
            Text =  Localize("Button.Delete").Text,
            AuxText =  Localize("Button.Cancel").Text,
            Icon = "fas fa-trash",
            ReferenceParameter = "Id",
            DeleteConfirmBox = true,
            DeleteConfirmBoxMsg = Localize("Confirmation.Delete").Text,
            HyperLinkType = HyperLinkTypeEnum.HYPERLINK_TEXT_ICON,
            ButtonColor = ButtonColorEnum.PRIMARY
        }
    },
    Columns = new List<ColumnModel>
    {
        new ColumnModel { Title = Localize("ProjectMemberGrid.UserName").Text, DataColumn = "UserName" },
        new ColumnModel { Title = Localize("ProjectMemberGrid.CanReport").Text, DataColumn = "CanReport", Conditions = new List<ColumnConditionModel>{
            new ColumnConditionModel { Value = "true", Operator = OperatorEnum.EQUAL, Icon = "fa fa-check", TextColor = "#2eb85c" },
            new ColumnConditionModel { Value = "false", Operator = OperatorEnum.EQUAL, Icon = "fa fa-times", TextColor = "#e55353" }
        }},
        new ColumnModel { Title = Localize("ProjectMemberGrid.CanEdit").Text, DataColumn = "CanEdit", Conditions = new List<ColumnConditionModel>{
            new ColumnConditionModel { Value = "true", Operator = OperatorEnum.EQUAL, Icon = "fa fa-check", TextColor = "#2eb85c" },
            new ColumnConditionModel { Value = "false", Operator = OperatorEnum.EQUAL, Icon = "fa fa-times", TextColor = "#e55353" }
        }},
        new ColumnModel { Title = Localize("ProjectMemberGrid.CanClose").Text, DataColumn = "CanClose", Conditions = new List<ColumnConditionModel>{
            new ColumnConditionModel { Value = "true", Operator = OperatorEnum.EQUAL, Icon = "fa fa-check", TextColor = "#2eb85c" },
            new ColumnConditionModel { Value = "false", Operator = OperatorEnum.EQUAL, Icon = "fa fa-times", TextColor = "#e55353" }
        }},
        new ColumnModel { Title = Localize("ProjectMemberGrid.CanReOpen").Text, DataColumn = "CanReOpen", Conditions = new List<ColumnConditionModel>{
            new ColumnConditionModel { Value = "true", Operator = OperatorEnum.EQUAL, Icon = "fa fa-check", TextColor = "#2eb85c" },
            new ColumnConditionModel { Value = "false", Operator = OperatorEnum.EQUAL, Icon = "fa fa-times", TextColor = "#e55353" }
        }},
        new ColumnModel { Title = Localize("ProjectMemberGrid.CanComment").Text, DataColumn = "CanComment", Conditions = new List<ColumnConditionModel>{
            new ColumnConditionModel { Value = "true", Operator = OperatorEnum.EQUAL, Icon = "fa fa-check", TextColor = "#2eb85c" },
            new ColumnConditionModel { Value = "false", Operator = OperatorEnum.EQUAL, Icon = "fa fa-times", TextColor = "#e55353" }
        }}
    }
})